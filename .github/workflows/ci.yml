name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-rls:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: '2.20.3'

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Start Supabase
        run: supabase start

        - name: Discover Postgres container name and port
        id: detect-port
        run: |
          echo "::group::Containers em execução"
          docker ps --format 'table {{.Names}}\t{{.Ports}}'
          echo "::endgroup::"
      
          DB_CONTAINER=$(docker ps --filter "expose=5432" --format '{{.Names}}' | grep db | head -n 1)
          echo "Container de banco encontrado: $DB_CONTAINER"
      
          PGPORT=$(docker inspect $DB_CONTAINER --format='{{(index (index .NetworkSettings.Ports "5432/tcp") 0).HostPort}}')
          echo "PGPORT=$PGPORT" >> $GITHUB_ENV
          echo "::notice title=Postgres Detected::Container=$DB_CONTAINER / Port=$PGPORT"
      

      - name: Wait for Postgres
        run: |
          timeout 30s bash -c "until pg_isready -h localhost -p $PGPORT -U postgres; do echo 'Aguardando Postgres...'; sleep 1; done"

      - name: Reset database
        run: supabase db reset --local

      - name: Wait for Postgres after reset
        run: |
          timeout 30s bash -c "until pg_isready -h localhost -p $PGPORT -U postgres; do echo 'Aguardando Postgres pós-reset...'; sleep 1; done"

      - name: Run RLS tests
        env:
          PGPASSWORD: postgres
        run: |
          psql -h localhost -p $PGPORT -U postgres -d postgres -f scripts/test_rls.sql

      - name: Stop Supabase
        if: always()
        run: supabase stop
